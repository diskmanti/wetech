apiVersion: kro.run/v1alpha1
kind: ResourceGraphDefinition
metadata: 
  name: lhindapp
spec: 
  schema:
    apiVersion: v1alpha1 
    kind: LhindApp
    spec:
      appName: string
      image: string
      replicas: integer
      servicePort: integer
      ingress:
        enabled: boolean | default=false
        host: string
        path: string       
        tls:
          enabled: boolean | default=false
          secretName: string
    status:    
      deploymentConditions: ${deployment.status.conditions}
      # availableReplicas: ${deployment.status.availableReplicas}
  resources:
    - id: serviceAccount
      template:
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: ${schema.spec.appName}-sa
    - id: deployment
      template:
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: ${schema.spec.appName}-deployment
        spec:
          replicas: ${schema.spec.replicas}
          selector:
            matchLabels:
              app: ${schema.spec.appName}
          template:
            metadata:
              labels:
                app: ${schema.spec.appName}
            spec:
              serviceAccountName: ${serviceAccount.metadata.name}
              containers:
                - name: ${schema.spec.appName}
                  image: ${schema.spec.image}
                  ports:
                    - containerPort: ${schema.spec.servicePort}
    - id: service
      template:
        apiVersion: v1
        kind: Service
        metadata:
          name: ${schema.spec.appName}-service
        spec:
          selector:
            app: ${schema.spec.appName}
          ports:
            - protocol: TCP
              port: 80
              targetPort: ${schema.spec.servicePort}
    - id: ingress
      includeWhen:
        - ${schema.spec.ingress.enabled}
      template:
        apiVersion: networking.k8s.io/v1
        kind: Ingress
        metadata:
          name: ${schema.spec.appName}-ingress
        spec:
          tls:
            - hosts:
                - ${schema.spec.ingress.host}
              secretName: ${schema.spec.ingress.tls.secretName}
          rules:
            - host: ${schema.spec.ingress.host}
              http:
                paths:
                  - path: ${schema.spec.ingress.path}
                    pathType: Prefix
                    backend:
                      service:
                        name: ${service.metadata.name}
                        port:
                          number: 80
