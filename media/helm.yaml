{{- if .Values.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "nginx-chart.serviceAccountName" . }}
  labels:
    {{- include "nginx-chart.labels" . | nindent 4 }}
{{- end }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.configMap.name }}
  labels:
    {{- include "nginx-chart.labels" . | nindent 4 }}
data:
  default.conf: |
{{ .Values.configMap.data.default\.conf | indent 4 }}
---
{{- if .Values.secret.create -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.secret.name }}
  labels:
    {{- include "nginx-chart.labels" . | nindent 4 }}
type: {{ .Values.secret.type }}
data:
  {{- toYaml .Values.secret.data | nindent 2 }}
{{- end }}
---
{{- if .Values.pvc.create -}}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.pvc.name }}
  labels:
    {{- include "nginx-chart.labels" . | nindent 4 }}
spec:
  accessModes:
    {{- toYaml .Values.pvc.accessModes | nindent 4 }}
  resources:
    requests:
      storage: {{ .Values.pvc.storage }}
{{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nginx-chart.fullname" . }}
  labels:
    {{- include "nginx-chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "nginx-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "nginx-chart.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "nginx-chart.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - name: nginx-config-volume
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
            - name: nginx-data
              mountPath: /usr/share/nginx/html
            - name: secret-volume
              mountPath: "/etc/secret"
              readOnly: true
      volumes:
        - name: nginx-config-volume
          configMap:
            name: {{ .Values.configMap.name }}
        - name: nginx-data
          persistentVolumeClaim:
            claimName: {{ .Values.pvc.name }}
        - name: secret-volume
          secret:
            secretName: {{ .Values.secret.name }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.service.name }}
  labels:
    {{- include "nginx-chart.labels" . | nindent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ .Values.service.port }}
      targetPort: http
      protocol: TCP
      name: http
  selector:
    {{- include "nginx-chart.selectorLabels" . | nindent 4 }}
---
{{- if .Values.ingress.enabled -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.ingress.name }}
  labels:
    {{- include "nginx-chart.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if .Values.ingress.className }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            pathType: {{ .pathType }}
            backend:
              service:
                name: {{ $.Values.service.name }}
                port:
                  number: {{ $.Values.service.port }}
          {{- end }}
    {{- end }}
{{- end }}
---

---
replicaCount: 2

image:
  repository: nginx
  pullPolicy: IfNotPresent
  tag: "latest"

serviceAccount:
  create: true
  name: "nginx-service-account"

configMap:
  name: "nginx-config"
  data:
    default.conf: |
      server {
        listen 80;
        server_name _;
        root /usr/share/nginx/html;
        index index.html;

        location / {
          try_files $uri $uri/ =404;
        }
      }

secret:
  create: true
  name: "nginx-secret"
  type: Opaque
  data: {}
  #  username: dXNlcg==
  #  password: cGFzc3dvcmQ=

pvc:
  create: true
  name: "nginx-pvc"
  accessModes:
    - ReadWriteOnce
  storage: "1Gi"

service:
  name: "nginx-service"
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  name: "nginx-ingress"
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
  hosts:
    - host: your-domain.com
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: your-tls-secret
  #    hosts:
  #      - your-domain.com